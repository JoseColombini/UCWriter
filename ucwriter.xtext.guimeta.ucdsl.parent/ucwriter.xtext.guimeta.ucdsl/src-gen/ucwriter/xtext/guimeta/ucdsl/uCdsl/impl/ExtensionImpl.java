/**
 * generated by Xtext 2.22.0
 */
package ucwriter.xtext.guimeta.ucdsl.uCdsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import ucwriter.xtext.guimeta.ucdsl.uCdsl.DeadEndStep;
import ucwriter.xtext.guimeta.ucdsl.uCdsl.ExtensioCondition;
import ucwriter.xtext.guimeta.ucdsl.uCdsl.Extension;
import ucwriter.xtext.guimeta.ucdsl.uCdsl.ExtensionStep;
import ucwriter.xtext.guimeta.ucdsl.uCdsl.Step;
import ucwriter.xtext.guimeta.ucdsl.uCdsl.UCdslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Extension</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ucwriter.xtext.guimeta.ucdsl.uCdsl.impl.ExtensionImpl#getStartFrom <em>Start From</em>}</li>
 *   <li>{@link ucwriter.xtext.guimeta.ucdsl.uCdsl.impl.ExtensionImpl#getName <em>Name</em>}</li>
 *   <li>{@link ucwriter.xtext.guimeta.ucdsl.uCdsl.impl.ExtensionImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link ucwriter.xtext.guimeta.ucdsl.uCdsl.impl.ExtensionImpl#getSteps <em>Steps</em>}</li>
 *   <li>{@link ucwriter.xtext.guimeta.ucdsl.uCdsl.impl.ExtensionImpl#getResumeAt <em>Resume At</em>}</li>
 *   <li>{@link ucwriter.xtext.guimeta.ucdsl.uCdsl.impl.ExtensionImpl#getEnd <em>End</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExtensionImpl extends MinimalEObjectImpl.Container implements Extension
{
  /**
   * The cached value of the '{@link #getStartFrom() <em>Start From</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStartFrom()
   * @generated
   * @ordered
   */
  protected Step startFrom;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected ExtensioCondition condition;

  /**
   * The cached value of the '{@link #getSteps() <em>Steps</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSteps()
   * @generated
   * @ordered
   */
  protected EList<ExtensionStep> steps;

  /**
   * The cached value of the '{@link #getResumeAt() <em>Resume At</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResumeAt()
   * @generated
   * @ordered
   */
  protected Step resumeAt;

  /**
   * The cached value of the '{@link #getEnd() <em>End</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnd()
   * @generated
   * @ordered
   */
  protected DeadEndStep end;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExtensionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UCdslPackage.Literals.EXTENSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Step getStartFrom()
  {
    if (startFrom != null && startFrom.eIsProxy())
    {
      InternalEObject oldStartFrom = (InternalEObject)startFrom;
      startFrom = (Step)eResolveProxy(oldStartFrom);
      if (startFrom != oldStartFrom)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, UCdslPackage.EXTENSION__START_FROM, oldStartFrom, startFrom));
      }
    }
    return startFrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Step basicGetStartFrom()
  {
    return startFrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStartFrom(Step newStartFrom)
  {
    Step oldStartFrom = startFrom;
    startFrom = newStartFrom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UCdslPackage.EXTENSION__START_FROM, oldStartFrom, startFrom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UCdslPackage.EXTENSION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExtensioCondition getCondition()
  {
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCondition(ExtensioCondition newCondition, NotificationChain msgs)
  {
    ExtensioCondition oldCondition = condition;
    condition = newCondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UCdslPackage.EXTENSION__CONDITION, oldCondition, newCondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCondition(ExtensioCondition newCondition)
  {
    if (newCondition != condition)
    {
      NotificationChain msgs = null;
      if (condition != null)
        msgs = ((InternalEObject)condition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UCdslPackage.EXTENSION__CONDITION, null, msgs);
      if (newCondition != null)
        msgs = ((InternalEObject)newCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UCdslPackage.EXTENSION__CONDITION, null, msgs);
      msgs = basicSetCondition(newCondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UCdslPackage.EXTENSION__CONDITION, newCondition, newCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExtensionStep> getSteps()
  {
    if (steps == null)
    {
      steps = new EObjectContainmentEList<ExtensionStep>(ExtensionStep.class, this, UCdslPackage.EXTENSION__STEPS);
    }
    return steps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Step getResumeAt()
  {
    if (resumeAt != null && resumeAt.eIsProxy())
    {
      InternalEObject oldResumeAt = (InternalEObject)resumeAt;
      resumeAt = (Step)eResolveProxy(oldResumeAt);
      if (resumeAt != oldResumeAt)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, UCdslPackage.EXTENSION__RESUME_AT, oldResumeAt, resumeAt));
      }
    }
    return resumeAt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Step basicGetResumeAt()
  {
    return resumeAt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResumeAt(Step newResumeAt)
  {
    Step oldResumeAt = resumeAt;
    resumeAt = newResumeAt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UCdslPackage.EXTENSION__RESUME_AT, oldResumeAt, resumeAt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeadEndStep getEnd()
  {
    return end;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnd(DeadEndStep newEnd, NotificationChain msgs)
  {
    DeadEndStep oldEnd = end;
    end = newEnd;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UCdslPackage.EXTENSION__END, oldEnd, newEnd);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnd(DeadEndStep newEnd)
  {
    if (newEnd != end)
    {
      NotificationChain msgs = null;
      if (end != null)
        msgs = ((InternalEObject)end).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UCdslPackage.EXTENSION__END, null, msgs);
      if (newEnd != null)
        msgs = ((InternalEObject)newEnd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UCdslPackage.EXTENSION__END, null, msgs);
      msgs = basicSetEnd(newEnd, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UCdslPackage.EXTENSION__END, newEnd, newEnd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UCdslPackage.EXTENSION__CONDITION:
        return basicSetCondition(null, msgs);
      case UCdslPackage.EXTENSION__STEPS:
        return ((InternalEList<?>)getSteps()).basicRemove(otherEnd, msgs);
      case UCdslPackage.EXTENSION__END:
        return basicSetEnd(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UCdslPackage.EXTENSION__START_FROM:
        if (resolve) return getStartFrom();
        return basicGetStartFrom();
      case UCdslPackage.EXTENSION__NAME:
        return getName();
      case UCdslPackage.EXTENSION__CONDITION:
        return getCondition();
      case UCdslPackage.EXTENSION__STEPS:
        return getSteps();
      case UCdslPackage.EXTENSION__RESUME_AT:
        if (resolve) return getResumeAt();
        return basicGetResumeAt();
      case UCdslPackage.EXTENSION__END:
        return getEnd();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UCdslPackage.EXTENSION__START_FROM:
        setStartFrom((Step)newValue);
        return;
      case UCdslPackage.EXTENSION__NAME:
        setName((String)newValue);
        return;
      case UCdslPackage.EXTENSION__CONDITION:
        setCondition((ExtensioCondition)newValue);
        return;
      case UCdslPackage.EXTENSION__STEPS:
        getSteps().clear();
        getSteps().addAll((Collection<? extends ExtensionStep>)newValue);
        return;
      case UCdslPackage.EXTENSION__RESUME_AT:
        setResumeAt((Step)newValue);
        return;
      case UCdslPackage.EXTENSION__END:
        setEnd((DeadEndStep)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UCdslPackage.EXTENSION__START_FROM:
        setStartFrom((Step)null);
        return;
      case UCdslPackage.EXTENSION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case UCdslPackage.EXTENSION__CONDITION:
        setCondition((ExtensioCondition)null);
        return;
      case UCdslPackage.EXTENSION__STEPS:
        getSteps().clear();
        return;
      case UCdslPackage.EXTENSION__RESUME_AT:
        setResumeAt((Step)null);
        return;
      case UCdslPackage.EXTENSION__END:
        setEnd((DeadEndStep)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UCdslPackage.EXTENSION__START_FROM:
        return startFrom != null;
      case UCdslPackage.EXTENSION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case UCdslPackage.EXTENSION__CONDITION:
        return condition != null;
      case UCdslPackage.EXTENSION__STEPS:
        return steps != null && !steps.isEmpty();
      case UCdslPackage.EXTENSION__RESUME_AT:
        return resumeAt != null;
      case UCdslPackage.EXTENSION__END:
        return end != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ExtensionImpl
