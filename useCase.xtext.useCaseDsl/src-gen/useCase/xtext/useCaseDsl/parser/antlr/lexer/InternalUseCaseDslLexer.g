/*
 * generated by Xtext 2.20.0
 */
lexer grammar InternalUseCaseDslLexer;

@header {
package useCase.xtext.useCaseDsl.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

AlternativeFlow : 'AlternativeFlow';

MainFlow : 'MainFlow';

Return : 'Return';

KW_System : 'System';

User : 'User';

AND : 'AND';

END : 'END';

IF : 'IF';

OR : 'OR';

UC : 'UC';

To : 'to';

QuotationMark : '"';

Apostrophe : '\'';

FullStop : '.';

Colon : ':';

RULE_CHAR : ('a'..'z'|'A'..'Z');

fragment RULE_BEGIN : ;

fragment RULE_END : ;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
