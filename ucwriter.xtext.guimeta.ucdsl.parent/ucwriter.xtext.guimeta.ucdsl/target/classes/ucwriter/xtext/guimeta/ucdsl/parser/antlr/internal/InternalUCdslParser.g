/*
 * generated by Xtext 2.21.0
 */
parser grammar InternalUCdslParser;

options {
	tokenVocab=InternalUCdslLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package ucwriter.xtext.guimeta.ucdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ucwriter.xtext.guimeta.ucdsl.services.UCdslGrammarAccess;

}

@members {

 	private UCdslGrammarAccess grammarAccess;

    public InternalUCdslParser(TokenStream input, UCdslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "UseCaseDocument";
   	}

   	@Override
   	protected UCdslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleUseCaseDocument
entryRuleUseCaseDocument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseCaseDocumentRule()); }
	iv_ruleUseCaseDocument=ruleUseCaseDocument
	{ $current=$iv_ruleUseCaseDocument.current; }
	EOF;

// Rule UseCaseDocument
ruleUseCaseDocument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getUseCaseDocumentAccess().getUsecaseUseCaseParserRuleCall_0());
			}
			lv_usecase_0_0=ruleUseCase
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getUseCaseDocumentRule());
				}
				add(
					$current,
					"usecase",
					lv_usecase_0_0,
					"ucwriter.xtext.guimeta.ucdsl.UCdsl.UseCase");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleUseCase
entryRuleUseCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseCaseRule()); }
	iv_ruleUseCase=ruleUseCase
	{ $current=$iv_ruleUseCase.current; }
	EOF;

// Rule UseCase
ruleUseCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=UC
		{
			newLeafNode(otherlv_0, grammarAccess.getUseCaseAccess().getUCKeyword_0());
		}
		(
			(
				lv_number_1_0=RULE_INT
				{
					newLeafNode(lv_number_1_0, grammarAccess.getUseCaseAccess().getNumberINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUseCaseRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2=Colon
		{
			newLeafNode(otherlv_2, grammarAccess.getUseCaseAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getNameLongNameParserRuleCall_3_0());
				}
				lv_name_3_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getPreconditionPreconditionParserRuleCall_4_0());
				}
				lv_precondition_4_0=rulePrecondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					set(
						$current,
						"precondition",
						lv_precondition_4_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.Precondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getPostconditionPostconditionParserRuleCall_5_0());
				}
				lv_postcondition_5_0=rulePostcondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					set(
						$current,
						"postcondition",
						lv_postcondition_5_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.Postcondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6=MAIN
		{
			newLeafNode(otherlv_6, grammarAccess.getUseCaseAccess().getMAINKeyword_6());
		}
		otherlv_7=FLOW
		{
			newLeafNode(otherlv_7, grammarAccess.getUseCaseAccess().getFLOWKeyword_7());
		}
		otherlv_8=Colon
		{
			newLeafNode(otherlv_8, grammarAccess.getUseCaseAccess().getColonKeyword_8());
		}
		this_BEGIN_9=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_9, grammarAccess.getUseCaseAccess().getBEGINTerminalRuleCall_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getStepsUseCaseStepParserRuleCall_10_0());
				}
				lv_steps_10_0=ruleUseCaseStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"steps",
						lv_steps_10_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.UseCaseStep");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_11=RULE_END
		{
			newLeafNode(this_END_11, grammarAccess.getUseCaseAccess().getENDTerminalRuleCall_11());
		}
		(
			(
				otherlv_12=ALTERNATIVE
				{
					newLeafNode(otherlv_12, grammarAccess.getUseCaseAccess().getALTERNATIVEKeyword_12_0_0());
				}
				otherlv_13=FLOW
				{
					newLeafNode(otherlv_13, grammarAccess.getUseCaseAccess().getFLOWKeyword_12_0_1());
				}
			)
			otherlv_14=Colon
			{
				newLeafNode(otherlv_14, grammarAccess.getUseCaseAccess().getColonKeyword_12_1());
			}
			this_BEGIN_15=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_15, grammarAccess.getUseCaseAccess().getBEGINTerminalRuleCall_12_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseAccess().getAlternativeflowsExtensionParserRuleCall_12_3_0());
					}
					lv_alternativeflows_16_0=ruleExtension
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseRule());
						}
						add(
							$current,
							"alternativeflows",
							lv_alternativeflows_16_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.Extension");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			this_END_17=RULE_END
			{
				newLeafNode(this_END_17, grammarAccess.getUseCaseAccess().getENDTerminalRuleCall_12_4());
			}
		)?
	)
;

// Entry rule entryRuleExtension
entryRuleExtension returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtensionRule()); }
	iv_ruleExtension=ruleExtension
	{ $current=$iv_ruleExtension.current; }
	EOF;

// Rule Extension
ruleExtension returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtensionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExtensionAccess().getStartFromUseCaseStepCrossReference_0_0_0());
					}
					ruleQualifiedStepName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtensionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExtensionAccess().getStartFromExtensionStepCrossReference_0_1_0());
					}
					ruleQualifiedExtensionStepName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_2=FullStop
		{
			newLeafNode(otherlv_2, grammarAccess.getExtensionAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_name_3_0=RULE_CHAR
				{
					newLeafNode(lv_name_3_0, grammarAccess.getExtensionAccess().getNameCHARTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtensionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.CHAR");
				}
			)
		)
		otherlv_4=FullStop
		{
			newLeafNode(otherlv_4, grammarAccess.getExtensionAccess().getFullStopKeyword_3());
		}
		otherlv_5=IF
		{
			newLeafNode(otherlv_5, grammarAccess.getExtensionAccess().getIFKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtensionAccess().getConditionConditionParserRuleCall_5_0());
				}
				lv_condition_6_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtensionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_6_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_7=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_7, grammarAccess.getExtensionAccess().getBEGINTerminalRuleCall_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtensionAccess().getStepsExtensionStepParserRuleCall_7_0());
				}
				lv_steps_8_0=ruleExtensionStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtensionRule());
					}
					add(
						$current,
						"steps",
						lv_steps_8_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.ExtensionStep");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExtensionAccess().getStepNameParserRuleCall_8_0_0());
				}
				ruleStepName
				{
					afterParserOrEnumRuleCall();
				}
				otherlv_10=FullStop
				{
					newLeafNode(otherlv_10, grammarAccess.getExtensionAccess().getFullStopKeyword_8_0_1());
				}
				otherlv_11=RETURN
				{
					newLeafNode(otherlv_11, grammarAccess.getExtensionAccess().getRETURNKeyword_8_0_2());
				}
				otherlv_12=TO
				{
					newLeafNode(otherlv_12, grammarAccess.getExtensionAccess().getTOKeyword_8_0_3());
				}
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExtensionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getExtensionAccess().getResumeAtUseCaseStepCrossReference_8_0_4_0_0());
							}
							ruleQualifiedStepName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExtensionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getExtensionAccess().getResumeAtExtensionStepCrossReference_8_0_4_1_0());
							}
							ruleQualifiedExtensionStepName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getExtensionAccess().getEndDeadEndStepParserRuleCall_8_1_0());
					}
					lv_end_15_0=ruleDeadEndStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtensionRule());
						}
						set(
							$current,
							"end",
							lv_end_15_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.DeadEndStep");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		this_END_16=RULE_END
		{
			newLeafNode(this_END_16, grammarAccess.getExtensionAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleUseCaseStep
entryRuleUseCaseStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseCaseStepRule()); }
	iv_ruleUseCaseStep=ruleUseCaseStep
	{ $current=$iv_ruleUseCaseStep.current; }
	EOF;

// Rule UseCaseStep
ruleUseCaseStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUseCaseStepRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUseCaseStepAccess().getParentRepeatingStepCrossReference_0_0_0_0());
						}
						ruleQualifiedStepName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1=FullStop
				{
					newLeafNode(otherlv_1, grammarAccess.getUseCaseStepAccess().getFullStopKeyword_0_0_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseStepAccess().getNameStepNameParserRuleCall_0_1_0());
					}
					lv_name_2_0=ruleStepName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseStepRule());
						}
						set(
							$current,
							"name",
							lv_name_2_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.StepName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=FullStop
			{
				newLeafNode(otherlv_3, grammarAccess.getUseCaseStepAccess().getFullStopKeyword_0_2());
			}
			otherlv_4=INCLUDE
			{
				newLeafNode(otherlv_4, grammarAccess.getUseCaseStepAccess().getINCLUDEKeyword_0_3());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUseCaseStepRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUseCaseStepAccess().getReferenceUseCaseCrossReference_0_4_0());
					}
					ruleLongName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUseCaseStepAccess().getUserStepAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUseCaseStepRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUseCaseStepAccess().getParentRepeatingStepCrossReference_1_1_0_0());
						}
						ruleQualifiedStepName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8=FullStop
				{
					newLeafNode(otherlv_8, grammarAccess.getUseCaseStepAccess().getFullStopKeyword_1_1_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseStepAccess().getNameStepNameParserRuleCall_1_2_0());
					}
					lv_name_9_0=ruleStepName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseStepRule());
						}
						set(
							$current,
							"name",
							lv_name_9_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.StepName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=FullStop
			{
				newLeafNode(otherlv_10, grammarAccess.getUseCaseStepAccess().getFullStopKeyword_1_3());
			}
			otherlv_11=USER
			{
				newLeafNode(otherlv_11, grammarAccess.getUseCaseStepAccess().getUSERKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseStepAccess().getSentenceLongNameParserRuleCall_1_5_0());
					}
					lv_sentence_12_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseStepRule());
						}
						set(
							$current,
							"sentence",
							lv_sentence_12_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUseCaseStepAccess().getSystemStepAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUseCaseStepRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUseCaseStepAccess().getParentRepeatingStepCrossReference_2_1_0_0());
						}
						ruleQualifiedStepName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_15=FullStop
				{
					newLeafNode(otherlv_15, grammarAccess.getUseCaseStepAccess().getFullStopKeyword_2_1_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseStepAccess().getNameStepNameParserRuleCall_2_2_0());
					}
					lv_name_16_0=ruleStepName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseStepRule());
						}
						set(
							$current,
							"name",
							lv_name_16_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.StepName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=FullStop
			{
				newLeafNode(otherlv_17, grammarAccess.getUseCaseStepAccess().getFullStopKeyword_2_3());
			}
			otherlv_18=SYSTEM
			{
				newLeafNode(otherlv_18, grammarAccess.getUseCaseStepAccess().getSYSTEMKeyword_2_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseStepAccess().getSentenceLongNameParserRuleCall_2_5_0());
					}
					lv_sentence_19_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseStepRule());
						}
						set(
							$current,
							"sentence",
							lv_sentence_19_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUseCaseStepAccess().getRepeatingStepAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUseCaseStepRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUseCaseStepAccess().getParentRepeatingStepCrossReference_3_1_0_0());
						}
						ruleQualifiedStepName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_22=FullStop
				{
					newLeafNode(otherlv_22, grammarAccess.getUseCaseStepAccess().getFullStopKeyword_3_1_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseStepAccess().getNameStepNameParserRuleCall_3_2_0());
					}
					lv_name_23_0=ruleStepName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseStepRule());
						}
						set(
							$current,
							"name",
							lv_name_23_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.StepName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_24=FullStop
			{
				newLeafNode(otherlv_24, grammarAccess.getUseCaseStepAccess().getFullStopKeyword_3_3());
			}
			otherlv_25=WHILE
			{
				newLeafNode(otherlv_25, grammarAccess.getUseCaseStepAccess().getWHILEKeyword_3_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseStepAccess().getRepeatingConditionConditionParserRuleCall_3_5_0());
					}
					lv_repeatingCondition_26_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseStepRule());
						}
						set(
							$current,
							"repeatingCondition",
							lv_repeatingCondition_26_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_BEGIN_27=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_27, grammarAccess.getUseCaseStepAccess().getBEGINTerminalRuleCall_3_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseStepAccess().getStepsUseCaseStepParserRuleCall_3_7_0());
					}
					lv_steps_28_0=ruleUseCaseStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseStepRule());
						}
						add(
							$current,
							"steps",
							lv_steps_28_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.UseCaseStep");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			this_END_29=RULE_END
			{
				newLeafNode(this_END_29, grammarAccess.getUseCaseStepAccess().getENDTerminalRuleCall_3_8());
			}
		)
	)
;

// Entry rule entryRuleExtensionStep
entryRuleExtensionStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtensionStepRule()); }
	iv_ruleExtensionStep=ruleExtensionStep
	{ $current=$iv_ruleExtensionStep.current; }
	EOF;

// Rule ExtensionStep
ruleExtensionStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExtensionStepAccess().getNameStepNameParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleStepName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtensionStepRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.StepName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=FullStop
			{
				newLeafNode(otherlv_1, grammarAccess.getExtensionStepAccess().getFullStopKeyword_0_1());
			}
			otherlv_2=INCLUDE
			{
				newLeafNode(otherlv_2, grammarAccess.getExtensionStepAccess().getINCLUDEKeyword_0_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtensionStepRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExtensionStepAccess().getReferenceUseCaseCrossReference_0_3_0());
					}
					ruleLongName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExtensionStepAccess().getNameStepNameParserRuleCall_1_0_0());
					}
					lv_name_4_0=ruleStepName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtensionStepRule());
						}
						set(
							$current,
							"name",
							lv_name_4_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.StepName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=FullStop
			{
				newLeafNode(otherlv_5, grammarAccess.getExtensionStepAccess().getFullStopKeyword_1_1());
			}
			(
				otherlv_6=USER
				{
					newLeafNode(otherlv_6, grammarAccess.getExtensionStepAccess().getUSERKeyword_1_2_0());
				}
				    |
				otherlv_7=SYSTEM
				{
					newLeafNode(otherlv_7, grammarAccess.getExtensionStepAccess().getSYSTEMKeyword_1_2_1());
				}
				    |
				otherlv_8=WHILE
				{
					newLeafNode(otherlv_8, grammarAccess.getExtensionStepAccess().getWHILEKeyword_1_2_2());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getExtensionStepAccess().getSentenceLongNameParserRuleCall_1_3_0());
					}
					lv_sentence_9_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtensionStepRule());
						}
						set(
							$current,
							"sentence",
							lv_sentence_9_0,
							"ucwriter.xtext.guimeta.ucdsl.UCdsl.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExtensionStepAccess().getDeadEndStepParserRuleCall_2());
		}
		this_DeadEndStep_10=ruleDeadEndStep
		{
			$current = $this_DeadEndStep_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDeadEndStep
entryRuleDeadEndStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeadEndStepRule()); }
	iv_ruleDeadEndStep=ruleDeadEndStep
	{ $current=$iv_ruleDeadEndStep.current; }
	EOF;

// Rule DeadEndStep
ruleDeadEndStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeadEndStepAccess().getNameStepNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleStepName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeadEndStepRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.StepName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=FullStop
		{
			newLeafNode(otherlv_1, grammarAccess.getDeadEndStepAccess().getFullStopKeyword_1());
		}
		(
			otherlv_2=USER
			{
				newLeafNode(otherlv_2, grammarAccess.getDeadEndStepAccess().getUSERKeyword_2_0());
			}
			    |
			otherlv_3=SYSTEM
			{
				newLeafNode(otherlv_3, grammarAccess.getDeadEndStepAccess().getSYSTEMKeyword_2_1());
			}
			    |
			otherlv_4=WHILE
			{
				newLeafNode(otherlv_4, grammarAccess.getDeadEndStepAccess().getWHILEKeyword_2_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeadEndStepAccess().getSentenceLongNameParserRuleCall_3_0());
				}
				lv_sentence_5_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeadEndStepRule());
					}
					set(
						$current,
						"sentence",
						lv_sentence_5_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6=UC
		{
			newLeafNode(otherlv_6, grammarAccess.getDeadEndStepAccess().getUCKeyword_4());
		}
		otherlv_7=END
		{
			newLeafNode(otherlv_7, grammarAccess.getDeadEndStepAccess().getENDKeyword_5());
		}
	)
;

// Entry rule entryRulePrecondition
entryRulePrecondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreconditionRule()); }
	iv_rulePrecondition=rulePrecondition
	{ $current=$iv_rulePrecondition.current; }
	EOF;

// Rule Precondition
rulePrecondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=PRECONDITION
		{
			newLeafNode(otherlv_0, grammarAccess.getPreconditionAccess().getPRECONDITIONKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getPreconditionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPreconditionAccess().getConditionConditionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreconditionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePostcondition
entryRulePostcondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostconditionRule()); }
	iv_rulePostcondition=rulePostcondition
	{ $current=$iv_rulePostcondition.current; }
	EOF;

// Rule Postcondition
rulePostcondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=POSTCONDITION
		{
			newLeafNode(otherlv_0, grammarAccess.getPostconditionAccess().getPOSTCONDITIONKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getPostconditionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPostconditionAccess().getConditionConditionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostconditionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"ucwriter.xtext.guimeta.ucdsl.UCdsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLongName
entryRuleLongName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLongNameRule()); }
	iv_ruleLongName=ruleLongName
	{ $current=$iv_ruleLongName.current.getText(); }
	EOF;

// Rule LongName
ruleLongName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getLongNameAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_ANY_OTHER_1=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_1);
		}
		{
			newLeafNode(this_ANY_OTHER_1, grammarAccess.getLongNameAccess().getANY_OTHERTerminalRuleCall_1());
		}
		    |
		this_CHAR_2=RULE_CHAR
		{
			$current.merge(this_CHAR_2);
		}
		{
			newLeafNode(this_CHAR_2, grammarAccess.getLongNameAccess().getCHARTerminalRuleCall_2());
		}
		    |
		kw=Colon
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLongNameAccess().getColonKeyword_3());
		}
		    |
		kw=FullStop
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLongNameAccess().getFullStopKeyword_4());
		}
		    |
		kw=QuotationMark
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLongNameAccess().getQuotationMarkKeyword_5());
		}
		    |
		kw=Apostrophe
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLongNameAccess().getApostropheKeyword_6());
		}
	)+
;

// Entry rule entryRuleCondition
entryRuleCondition returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current.getText(); }
	EOF;

// Rule Condition
ruleCondition returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getConditionAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_ANY_OTHER_1=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_1);
		}
		{
			newLeafNode(this_ANY_OTHER_1, grammarAccess.getConditionAccess().getANY_OTHERTerminalRuleCall_1());
		}
		    |
		this_CHAR_2=RULE_CHAR
		{
			$current.merge(this_CHAR_2);
		}
		{
			newLeafNode(this_CHAR_2, grammarAccess.getConditionAccess().getCHARTerminalRuleCall_2());
		}
		    |
		kw=Colon
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionAccess().getColonKeyword_3());
		}
		    |
		kw=FullStop
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionAccess().getFullStopKeyword_4());
		}
		    |
		kw=QuotationMark
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionAccess().getQuotationMarkKeyword_5());
		}
		    |
		kw=Apostrophe
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionAccess().getApostropheKeyword_6());
		}
		    |
		kw=AND
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionAccess().getANDKeyword_7());
		}
		    |
		kw=OR
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionAccess().getORKeyword_8());
		}
	)+
;

// Entry rule entryRuleStepName
entryRuleStepName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStepNameRule()); }
	iv_ruleStepName=ruleStepName
	{ $current=$iv_ruleStepName.current.getText(); }
	EOF;

// Rule StepName
ruleStepName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getStepNameAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleQualifiedStepName
entryRuleQualifiedStepName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedStepNameRule()); }
	iv_ruleQualifiedStepName=ruleQualifiedStepName
	{ $current=$iv_ruleQualifiedStepName.current.getText(); }
	EOF;

// Rule QualifiedStepName
ruleQualifiedStepName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedStepNameAccess().getStepNameParserRuleCall_0());
		}
		this_StepName_0=ruleStepName
		{
			$current.merge(this_StepName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw=FullStop
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedStepNameAccess().getFullStopKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getQualifiedStepNameAccess().getStepNameParserRuleCall_1_1());
			}
			this_StepName_2=ruleStepName
			{
				$current.merge(this_StepName_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleQualifiedExtensionStepName
entryRuleQualifiedExtensionStepName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedExtensionStepNameRule()); }
	iv_ruleQualifiedExtensionStepName=ruleQualifiedExtensionStepName
	{ $current=$iv_ruleQualifiedExtensionStepName.current.getText(); }
	EOF;

// Rule QualifiedExtensionStepName
ruleQualifiedExtensionStepName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedExtensionStepNameAccess().getQualifiedStepNameParserRuleCall_0());
		}
		this_QualifiedStepName_0=ruleQualifiedStepName
		{
			$current.merge(this_QualifiedStepName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=FullStop
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedExtensionStepNameAccess().getFullStopKeyword_1());
		}
		this_CHAR_2=RULE_CHAR
		{
			$current.merge(this_CHAR_2);
		}
		{
			newLeafNode(this_CHAR_2, grammarAccess.getQualifiedExtensionStepNameAccess().getCHARTerminalRuleCall_2());
		}
		kw=FullStop
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedExtensionStepNameAccess().getFullStopKeyword_3());
		}
		{
			newCompositeNode(grammarAccess.getQualifiedExtensionStepNameAccess().getQualifiedStepNameParserRuleCall_4());
		}
		this_QualifiedStepName_4=ruleQualifiedStepName
		{
			$current.merge(this_QualifiedStepName_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)+
;
