/**
 * generated by Xtext 2.20.0
 */
package useCase.xtext.useCaseDsl.useCaseDsl;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Use Case</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getNumber <em>Number</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getName <em>Name</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getPrecondition <em>Precondition</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getPostcondition <em>Postcondition</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getMainflow <em>Mainflow</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getSteps <em>Steps</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getDeclareofflow <em>Declareofflow</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getAlternativeflows <em>Alternativeflows</em>}</li>
 * </ul>
 *
 * @see useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage#getUseCase()
 * @model
 * @generated
 */
public interface UseCase extends EObject
{
  /**
   * Returns the value of the '<em><b>Number</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Number</em>' attribute.
   * @see #setNumber(int)
   * @see useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage#getUseCase_Number()
   * @model
   * @generated
   */
  int getNumber();

  /**
   * Sets the value of the '{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getNumber <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Number</em>' attribute.
   * @see #getNumber()
   * @generated
   */
  void setNumber(int value);

  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage#getUseCase_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Precondition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Precondition</em>' containment reference.
   * @see #setPrecondition(Precondition)
   * @see useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage#getUseCase_Precondition()
   * @model containment="true"
   * @generated
   */
  Precondition getPrecondition();

  /**
   * Sets the value of the '{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getPrecondition <em>Precondition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Precondition</em>' containment reference.
   * @see #getPrecondition()
   * @generated
   */
  void setPrecondition(Precondition value);

  /**
   * Returns the value of the '<em><b>Postcondition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Postcondition</em>' containment reference.
   * @see #setPostcondition(Postcondition)
   * @see useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage#getUseCase_Postcondition()
   * @model containment="true"
   * @generated
   */
  Postcondition getPostcondition();

  /**
   * Sets the value of the '{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getPostcondition <em>Postcondition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Postcondition</em>' containment reference.
   * @see #getPostcondition()
   * @generated
   */
  void setPostcondition(Postcondition value);

  /**
   * Returns the value of the '<em><b>Mainflow</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Mainflow</em>' attribute.
   * @see #setMainflow(String)
   * @see useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage#getUseCase_Mainflow()
   * @model
   * @generated
   */
  String getMainflow();

  /**
   * Sets the value of the '{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getMainflow <em>Mainflow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Mainflow</em>' attribute.
   * @see #getMainflow()
   * @generated
   */
  void setMainflow(String value);

  /**
   * Returns the value of the '<em><b>Steps</b></em>' containment reference list.
   * The list contents are of type {@link useCase.xtext.useCaseDsl.useCaseDsl.UseCaseStep}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Steps</em>' containment reference list.
   * @see useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage#getUseCase_Steps()
   * @model containment="true"
   * @generated
   */
  EList<UseCaseStep> getSteps();

  /**
   * Returns the value of the '<em><b>Declareofflow</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Declareofflow</em>' attribute.
   * @see #setDeclareofflow(String)
   * @see useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage#getUseCase_Declareofflow()
   * @model
   * @generated
   */
  String getDeclareofflow();

  /**
   * Sets the value of the '{@link useCase.xtext.useCaseDsl.useCaseDsl.UseCase#getDeclareofflow <em>Declareofflow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Declareofflow</em>' attribute.
   * @see #getDeclareofflow()
   * @generated
   */
  void setDeclareofflow(String value);

  /**
   * Returns the value of the '<em><b>Alternativeflows</b></em>' containment reference list.
   * The list contents are of type {@link useCase.xtext.useCaseDsl.useCaseDsl.Extension}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Alternativeflows</em>' containment reference list.
   * @see useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage#getUseCase_Alternativeflows()
   * @model containment="true"
   * @generated
   */
  EList<Extension> getAlternativeflows();

} // UseCase
