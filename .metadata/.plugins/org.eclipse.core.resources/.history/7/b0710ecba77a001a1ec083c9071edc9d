grammar useCase.xtext.useCaseDsl.UseCaseDsl with org.eclipse.xtext.common.Terminals 

generate useCaseDsl "http://www.xtext.useCase/useCaseDsl/UseCaseDsl"

//Use case structure
UseCase hidden(WS):
	'UC' number = INT ':' (name = LongName)
	 
	(mainflow = 'MainFlow')':'
	BEGIN
		(steps += UseCaseStep)+
	END
	((declareofflow = 'AlternativeFlow')':'
	BEGIN
		(alternativeflows += Extension)+
	END)?;

//Flows and behavorial
Extension:
	(startFrom = INT) '.' (name = ID)  '.' 'IF' (condition = Condition)
	BEGIN
		(steps += ExtensionStep)+
		(INT '.' 'Return' 'to' (resumeAt = INT)|end = DeadEndStep)
	END;


//Steps
Step:
	UseCaseStep|ExtensionStep;

UseCaseStep:
	{UserStep} (name = ID) '.' 'User' (sentence = LongName)|
	{SystemStep} (name = ID) '.' 'System'(sentence = LongName);

//I dont know how to use this shit
ExtensionStep:
	(name = INT) '.' ('User'|'System')? (sentence = LongName);

DeadEndStep:
	ExtensionStep 'UC' 'END';

/**********************	}
******* DataTypes *****
***********************/

LongName:
	(ID|ANY_OTHER|CHAR|':'|'.'|'"'|"'")+;
	
Condition:
	(ID|ANY_OTHER|CHAR|':'|'.'|'"'|"'"|'AND'|'OR')+;

/***************************	
******* TERMINAL RULES *****
****************************/
terminal CHAR:
	('a'..'z'|'A'..'Z');


@Override 
terminal ID:
	('^')?('a'..'z'|'A'..'Z'|'0'..'9'|'_')+;

/*terminal fragment ESCAPED_CHAR:
    '\\' ('n'|'t'|'r'|'\\');

terminal SP:
	' ';
*/

terminal BEGIN: 'synthetic:BEGIN';  // increase indentation
terminal END: 'synthetic:END';      // decrease indentation


/***********************************
 ********* Codes that I don't want to discard*****
 * *********************************************
 * /*MainFlow:
	{MainFlow} 	(name = 'MainFLow') ':'
	BEGIN
		(steps += UseCaseStep)+
	END;
/

*AlternativeFlow:
	(name = 'AlternativeFlow') ':'
	BEGIN
		(extension += Extension)+
	END;
*
* Extension:
	(ExtensionStep)
	BEGIN
		(steps += UseCaseStep)+
		(resumeAt = DeadEndStep)? 
	END;
/*ExtensionStep:
	'Ex' (startAt = [Step]) '.' name = CHAR '.' (condition += Condition);


DeadEndStep:
	(name = INT) '.' 'Return' 'to' (resumeAt = [Step]);
***/