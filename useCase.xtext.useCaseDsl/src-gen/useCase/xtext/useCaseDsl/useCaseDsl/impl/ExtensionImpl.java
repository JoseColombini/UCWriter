/**
 * generated by Xtext 2.20.0
 */
package useCase.xtext.useCaseDsl.useCaseDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import useCase.xtext.useCaseDsl.useCaseDsl.DeadEndStep;
import useCase.xtext.useCaseDsl.useCaseDsl.Extension;
import useCase.xtext.useCaseDsl.useCaseDsl.ExtensionStep;
import useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Extension</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.impl.ExtensionImpl#getStartFrom <em>Start From</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.impl.ExtensionImpl#getName <em>Name</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.impl.ExtensionImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.impl.ExtensionImpl#getSteps <em>Steps</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.impl.ExtensionImpl#getResumeAt <em>Resume At</em>}</li>
 *   <li>{@link useCase.xtext.useCaseDsl.useCaseDsl.impl.ExtensionImpl#getEnd <em>End</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExtensionImpl extends MinimalEObjectImpl.Container implements Extension
{
  /**
   * The cached value of the '{@link #getStartFrom() <em>Start From</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStartFrom()
   * @generated
   * @ordered
   */
  protected EList<Integer> startFrom;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getCondition() <em>Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected static final String CONDITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected String condition = CONDITION_EDEFAULT;

  /**
   * The cached value of the '{@link #getSteps() <em>Steps</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSteps()
   * @generated
   * @ordered
   */
  protected EList<ExtensionStep> steps;

  /**
   * The cached value of the '{@link #getResumeAt() <em>Resume At</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResumeAt()
   * @generated
   * @ordered
   */
  protected EList<Integer> resumeAt;

  /**
   * The cached value of the '{@link #getEnd() <em>End</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnd()
   * @generated
   * @ordered
   */
  protected DeadEndStep end;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExtensionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UseCaseDslPackage.Literals.EXTENSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Integer> getStartFrom()
  {
    if (startFrom == null)
    {
      startFrom = new EDataTypeEList<Integer>(Integer.class, this, UseCaseDslPackage.EXTENSION__START_FROM);
    }
    return startFrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UseCaseDslPackage.EXTENSION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCondition()
  {
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCondition(String newCondition)
  {
    String oldCondition = condition;
    condition = newCondition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UseCaseDslPackage.EXTENSION__CONDITION, oldCondition, condition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExtensionStep> getSteps()
  {
    if (steps == null)
    {
      steps = new EObjectContainmentEList<ExtensionStep>(ExtensionStep.class, this, UseCaseDslPackage.EXTENSION__STEPS);
    }
    return steps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Integer> getResumeAt()
  {
    if (resumeAt == null)
    {
      resumeAt = new EDataTypeEList<Integer>(Integer.class, this, UseCaseDslPackage.EXTENSION__RESUME_AT);
    }
    return resumeAt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeadEndStep getEnd()
  {
    return end;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnd(DeadEndStep newEnd, NotificationChain msgs)
  {
    DeadEndStep oldEnd = end;
    end = newEnd;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UseCaseDslPackage.EXTENSION__END, oldEnd, newEnd);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnd(DeadEndStep newEnd)
  {
    if (newEnd != end)
    {
      NotificationChain msgs = null;
      if (end != null)
        msgs = ((InternalEObject)end).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UseCaseDslPackage.EXTENSION__END, null, msgs);
      if (newEnd != null)
        msgs = ((InternalEObject)newEnd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UseCaseDslPackage.EXTENSION__END, null, msgs);
      msgs = basicSetEnd(newEnd, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UseCaseDslPackage.EXTENSION__END, newEnd, newEnd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UseCaseDslPackage.EXTENSION__STEPS:
        return ((InternalEList<?>)getSteps()).basicRemove(otherEnd, msgs);
      case UseCaseDslPackage.EXTENSION__END:
        return basicSetEnd(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UseCaseDslPackage.EXTENSION__START_FROM:
        return getStartFrom();
      case UseCaseDslPackage.EXTENSION__NAME:
        return getName();
      case UseCaseDslPackage.EXTENSION__CONDITION:
        return getCondition();
      case UseCaseDslPackage.EXTENSION__STEPS:
        return getSteps();
      case UseCaseDslPackage.EXTENSION__RESUME_AT:
        return getResumeAt();
      case UseCaseDslPackage.EXTENSION__END:
        return getEnd();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UseCaseDslPackage.EXTENSION__START_FROM:
        getStartFrom().clear();
        getStartFrom().addAll((Collection<? extends Integer>)newValue);
        return;
      case UseCaseDslPackage.EXTENSION__NAME:
        setName((String)newValue);
        return;
      case UseCaseDslPackage.EXTENSION__CONDITION:
        setCondition((String)newValue);
        return;
      case UseCaseDslPackage.EXTENSION__STEPS:
        getSteps().clear();
        getSteps().addAll((Collection<? extends ExtensionStep>)newValue);
        return;
      case UseCaseDslPackage.EXTENSION__RESUME_AT:
        getResumeAt().clear();
        getResumeAt().addAll((Collection<? extends Integer>)newValue);
        return;
      case UseCaseDslPackage.EXTENSION__END:
        setEnd((DeadEndStep)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UseCaseDslPackage.EXTENSION__START_FROM:
        getStartFrom().clear();
        return;
      case UseCaseDslPackage.EXTENSION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case UseCaseDslPackage.EXTENSION__CONDITION:
        setCondition(CONDITION_EDEFAULT);
        return;
      case UseCaseDslPackage.EXTENSION__STEPS:
        getSteps().clear();
        return;
      case UseCaseDslPackage.EXTENSION__RESUME_AT:
        getResumeAt().clear();
        return;
      case UseCaseDslPackage.EXTENSION__END:
        setEnd((DeadEndStep)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UseCaseDslPackage.EXTENSION__START_FROM:
        return startFrom != null && !startFrom.isEmpty();
      case UseCaseDslPackage.EXTENSION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case UseCaseDslPackage.EXTENSION__CONDITION:
        return CONDITION_EDEFAULT == null ? condition != null : !CONDITION_EDEFAULT.equals(condition);
      case UseCaseDslPackage.EXTENSION__STEPS:
        return steps != null && !steps.isEmpty();
      case UseCaseDslPackage.EXTENSION__RESUME_AT:
        return resumeAt != null && !resumeAt.isEmpty();
      case UseCaseDslPackage.EXTENSION__END:
        return end != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (startFrom: ");
    result.append(startFrom);
    result.append(", name: ");
    result.append(name);
    result.append(", condition: ");
    result.append(condition);
    result.append(", resumeAt: ");
    result.append(resumeAt);
    result.append(')');
    return result.toString();
  }

} //ExtensionImpl
