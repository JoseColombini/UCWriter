/*
 * generated by Xtext 2.20.0
 */
package useCase.xtext.useCaseDsl.validation;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.validation.Check;

import useCase.xtext.useCaseDsl.useCaseDsl.Step;
import useCase.xtext.useCaseDsl.useCaseDsl.UseCase;
import useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class UseCaseDslValidator extends AbstractUseCaseDslValidator {
	
	public static final String INVALID_NAME = "invalidName";

	@Check
	public void checkStep(Step step) {
		int i = 1;
		EObject parent = step.eContainer();
		while(parent instanceof Step) {
				i = i + 1;
			parent = parent.eContainer();
		}
		if (step.getName().length() > 2*i) {
				warning("Step should have just 'INT.'",
						UseCaseDslPackage.Literals.STEP__NAME,
						INVALID_NAME);	
		}
	}
	
	
}
