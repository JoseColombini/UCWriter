/*
 * generated by Xtext 2.20.0
 */
package useCase.xtext.useCaseDsl.validation;

import java.util.Iterator;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.validation.Check;

import useCase.xtext.useCaseDsl.useCaseDsl.Step;
import useCase.xtext.useCaseDsl.useCaseDsl.UseCase;
import useCase.xtext.useCaseDsl.useCaseDsl.UseCaseDslPackage;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class UseCaseDslValidator extends AbstractUseCaseDslValidator {
	
	public static final String INVALID_NAME = "invalidName";

	@Check
	public void checkStep(Step step) {
		int i = 1;
		EObject parent = step.eContainer();
		while(parent instanceof Step) {
				i = i + 1;
			parent = parent.eContainer();
		}
		if (step.getName().length() > 2*i) {
				warning("Step name should have shorter name",
						UseCaseDslPackage.Literals.STEP__NAME,
						INVALID_NAME);	
		}
		if (step.getName().length() < 2*i) {
			warning("Step name should have longer name",
					UseCaseDslPackage.Literals.STEP__NAME,
					INVALID_NAME);	
	}
	}
	
	@Check
	public void checkName(Step object) {
		List<EObject> compare = object.eContainer().eContents();
		Iterator<EObject> it = compare.iterator();
		int i = 0;
		
		while(it.hasNext()) {
			Step a = (Step) it.next();
			if(a.getName() == object.getName()) {
				i = i + 1;
			}
			if(i > 0) {
				error("Step name are not unique in context",
						UseCaseDslPackage.Literals.STEP__NAME,
						INVALID_NAME);
			}
		}
	}
	
	
}
